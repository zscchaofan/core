<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cclookme.info.core.user.mapper.StudentInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.cclookme.info.model.user.StudentInfo" >
    <id column="student_cardid" property="studentCardid" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="sexid" property="sexid" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="native_place" property="nativePlace" jdbcType="VARCHAR" />
    <result column="academy" property="academy" jdbcType="VARCHAR" />
    <result column="specialty" property="specialty" jdbcType="VARCHAR" />
    <result column="classname" property="classname" jdbcType="VARCHAR" />
    <result column="enrollment_year" property="enrollmentYear" jdbcType="VARCHAR" />
    <result column="graduation_year" property="graduationYear" jdbcType="VARCHAR" />
    <result column="dropout_year" property="dropoutYear" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    student_cardid, password, student_name, sexid, birthday, native_place, academy, specialty, 
    classname, enrollment_year, graduation_year, dropout_year, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student_info
    where student_cardid = #{studentCardid,jdbcType=VARCHAR}
  </select>
  <select id="selectByCardIdAndPassword" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from student_info
    where student_cardid = #{studentCardid,jdbcType=VARCHAR} 
    and  password=#{password}
  </select>
  <select id="selectBycardidAndnameAndstatusAndspecialty" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from student_info
     <trim prefix="where " prefixOverrides="and" >
     <if test="cardid != null and cardid!='' " >
         and student_cardid=#{cardid}
      </if>
     <if test="name != null and name!=''" >
          and student_name=#{name}
      </if>
     <if test="status != null and status!=''" >
          and status=#{status}
      </if>
     <if test="specialty != null and specialty!=''" >
         and specialty=#{specialty}
      </if>
      <if test="academy != 'all'" >
         and academy=#{academy}
      </if>
      </trim>
      limit #{page} ,5
  </select>
  <select id="selectBycardidAndnameAndspecialty" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from student_info where status='1'
     <if test="cardid != null and cardid!='' " >
         and student_cardid=#{cardid}
      </if>
     <if test="name != null and name!=''" >
          and student_name=#{name}
      </if>
     <if test="specialty != null and specialty!=''" >
         and specialty=#{specialty}
      </if>
     <if test="year != null and year!=''" >
         and enrollment_year like #{year}
      </if>
      <if test="academy != 'all'" >
         and academy=#{academy}
      </if>

      limit #{page} ,5
  </select>
   <select id="selectCountBycardidAndnameAndspecialty" resultType="java.lang.Integer" parameterType="map" >
    select count(*)
    from student_info where status='1'
     <if test="cardid != null and cardid!=''" >
         and student_cardid=#{cardid}
      </if>
     <if test="name != null and name!=''" >
          and student_name=#{name}
      </if>
     <if test="specialty != null and specialty!=''" >
         and specialty=#{specialty}
      </if>
      <if test="year != null and year!=''" >
         and enrollment_year like #{year}
      </if>
      <if test="academy != 'all'" >
         and academy=#{academy}
      </if>
  </select>
  <select id="selectCountBycardidAndnameAndstatusAndspecialty" resultType="java.lang.Integer" parameterType="map" >
    select count(*)
    from student_info
     <trim prefix="where " prefixOverrides="and" >
     <if test="cardid != null and cardid!=''" >
         and student_cardid=#{cardid}
      </if>
     <if test="name != null and name!=''" >
          and student_name=#{name}
      </if>
     <if test="status != null and status!=''" >
          and status=#{status}
      </if>
     <if test="specialty != null and specialty!=''" >
         and specialty=#{specialty}
      </if>
      <if test="academy != 'all'" >
         and academy=#{academy}
      </if>
      </trim>
  </select>
   <select id="selectStudentInfoBystudentidpre" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from student_info
    where student_cardid like #{studentCardid,jdbcType=VARCHAR} order by student_cardid desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student_info
    where student_cardid = #{studentCardid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.cclookme.info.model.user.StudentInfo" >
    insert into student_info (student_cardid, password, student_name, 
      sexid, birthday, native_place, 
      academy, specialty, classname, 
      enrollment_year, graduation_year, dropout_year, 
      status)
    values (#{studentCardid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{sexid,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR}, #{nativePlace,jdbcType=VARCHAR}, 
      #{academy,jdbcType=VARCHAR}, #{specialty,jdbcType=VARCHAR}, #{classname,jdbcType=VARCHAR}, 
      #{enrollmentYear,jdbcType=VARCHAR}, #{graduationYear,jdbcType=VARCHAR}, #{dropoutYear,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.cclookme.info.model.user.StudentInfo" >
    insert into student_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentCardid != null" >
        student_cardid,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="sexid != null" >
        sexid,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="nativePlace != null" >
        native_place,
      </if>
      <if test="academy != null" >
        academy,
      </if>
      <if test="specialty != null" >
        specialty,
      </if>
      <if test="classname != null" >
        classname,
      </if>
      <if test="enrollmentYear != null" >
        enrollment_year,
      </if>
      <if test="graduationYear != null" >
        graduation_year,
      </if>
      <if test="dropoutYear != null" >
        dropout_year,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentCardid != null" >
        #{studentCardid,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="sexid != null" >
        #{sexid,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="academy != null" >
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null" >
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentYear != null" >
        #{enrollmentYear,jdbcType=VARCHAR},
      </if>
      <if test="graduationYear != null" >
        #{graduationYear,jdbcType=VARCHAR},
      </if>
      <if test="dropoutYear != null" >
        #{dropoutYear,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cclookme.info.model.user.StudentInfo" >
    update student_info
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="sexid != null" >
        sexid = #{sexid,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="academy != null" >
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null" >
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="classname != null" >
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentYear != null" >
        enrollment_year = #{enrollmentYear,jdbcType=VARCHAR},
      </if>
      <if test="graduationYear != null" >
        graduation_year = #{graduationYear,jdbcType=VARCHAR},
      </if>
      <if test="dropoutYear != null" >
        dropout_year = #{dropoutYear,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where student_cardid = #{studentCardid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cclookme.info.model.user.StudentInfo" >
    update student_info
    set password = #{password,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      sexid = #{sexid,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR},
      enrollment_year = #{enrollmentYear,jdbcType=VARCHAR},
      graduation_year = #{graduationYear,jdbcType=VARCHAR},
      dropout_year = #{dropoutYear,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where student_cardid = #{studentCardid,jdbcType=VARCHAR}
  </update>
</mapper>